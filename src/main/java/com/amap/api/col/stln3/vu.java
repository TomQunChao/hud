package com.amap.api.col.stln3;

import android.content.Context;
import android.os.Bundle;
import android.text.TextUtils;
import com.amap.api.col.stln3.rj;
import com.amap.api.location.AMapLocation;
import com.amap.api.location.AMapLocationClientOption;
import com.amap.api.maps.model.MyLocationStyle;
import com.amap.api.services.district.DistrictSearchQuery;
import java.util.HashMap;
import java.util.Locale;
import org.json.JSONObject;

/* compiled from: CoreUtil */
public final class vu {
    static String a = "http://apilocate.amap.com/mobile/binary";
    static String b = "";
    static String c = "001;11B;11C;11F;11G;11H;11I;11K;122;135;13J;13S;14S;157;15O";
    public static String d = null;
    public static String e = null;
    public static int f = 30000;
    public static String g = null;
    public static String h = null;
    static String i;
    static HashMap<String, String> j;
    static boolean k = false;
    static boolean l = false;
    private static final String[] m = {"com.amap.api.location", "com.loc", "com.amap.api.fence"};
    private static rj n = null;
    private static boolean o = false;
    private static boolean p = false;

    public static String a() {
        return a;
    }

    private static String[] e() {
        return (String[]) m.clone();
    }

    public static boolean a(double d2, double d3) {
        int i2 = (int) ((d3 - 73.0d) / 0.5d);
        int i3 = (int) ((d2 - 3.5d) / 0.5d);
        if (i3 < 0 || i3 >= 101 || i2 < 0 || i2 >= 124) {
            return false;
        }
        try {
            ifcharAt((i3 * 124) + i2) == '1') {
                return true;
            }
            return false;
        } catch (Throwable th) {
            a(th, "CoreUtil", "isChina");
            return true;
        }
    }

    public static AMapLocation a(AMapLocation aMapLocation, AMapLocation aMapLocation2) {
        if (aMapLocation2 == null) {
            return aMapLocation;
        }
        try {
            aMapLocation.setCountry(aMapLocation2.getCountry());
            aMapLocation.setRoad(aMapLocation2.getRoad());
            aMapLocation.setPoiName(aMapLocation2.getPoiName());
            aMapLocation.setStreet(aMapLocation2.getStreet());
            aMapLocation.setNumber(aMapLocation2.getStreetNum());
            String cityCode = aMapLocation2.getCityCode();
            String adCode = aMapLocation2.getAdCode();
            aMapLocation.setCityCode(cityCode);
            aMapLocation.setAdCode(adCode);
            aMapLocation.setCity(aMapLocation2.getCity());
            aMapLocation.setDistrict(aMapLocation2.getDistrict());
            aMapLocation.setProvince(aMapLocation2.getProvince());
            aMapLocation.setAoiName(aMapLocation2.getAoiName());
            aMapLocation.setAddress(aMapLocation2.getAddress());
            aMapLocation.setDescription(aMapLocation2.getDescription());
            try {
                if (aMapLocation.getExtras() != null) {
                    aMapLocation.getExtras().putString("citycode", aMapLocation2.getCityCode());
                    aMapLocation.getExtras().putString("desc", aMapLocation2.getExtras().getString("desc"));
                    aMapLocation.getExtras().putString("adcode", aMapLocation2.getAdCode());
                } else {
                    Bundle bundle = new Bundle();
                    bundle.putString("citycode", aMapLocation2.getCityCode());
                    bundle.putString("desc", aMapLocation2.getExtras().getString("desc"));
                    bundle.putString("adcode", aMapLocation2.getAdCode());
                    aMapLocation.setExtras(bundle);
                }
            } catch (Throwable th) {
            }
            return aMapLocation;
        } catch (Throwable th2) {
            return aMapLocation;
        }
    }

    public static void a(AMapLocation aMapLocation, JSONObject jSONObject) {
        if (jSONObject != null && aMapLocation != null) {
            try {
                double optDouble = jSONObject.optDouble("lat", aMapLocation.getLatitude());
                double optDouble2 = jSONObject.optDouble("lon", aMapLocation.getLongitude());
                aMapLocation.setProvider(jSONObject.optString("provider", aMapLocation.getProvider()));
                aMapLocation.setLatitude(optDouble);
                aMapLocation.setLongitude(optDouble2);
                aMapLocation.setAltitude(jSONObject.optDouble("altitude", aMapLocation.getAltitude()));
                try {
                    String optString = jSONObject.optString("accuracy");
                    if (!TextUtils.isEmpty(optString)) {
                        aMapLocation.setAccuracy(Float.parseFloat(optString));
                    }
                } catch (Throwable th) {
                }
                try {
                    String optString2 = jSONObject.optString("speed");
                    if (!TextUtils.isEmpty(optString2)) {
                        aMapLocation.setSpeed(Float.parseFloat(optString2));
                    }
                } catch (Throwable th2) {
                }
                try {
                    String optString3 = jSONObject.optString("bearing");
                    if (!TextUtils.isEmpty(optString3)) {
                        aMapLocation.setBearing(Float.parseFloat(optString3));
                    }
                } catch (Throwable th3) {
                }
                aMapLocation.setAdCode(jSONObject.optString("adcode", aMapLocation.getAdCode()));
                aMapLocation.setCityCode(jSONObject.optString("citycode", aMapLocation.getCityCode()));
                aMapLocation.setAddress(jSONObject.optString("address", aMapLocation.getAddress()));
                String optString4 = jSONObject.optString("desc", "");
                aMapLocation.setCountry(jSONObject.optString(DistrictSearchQuery.KEYWORDS_COUNTRY, aMapLocation.getCountry()));
                aMapLocation.setProvince(jSONObject.optString(DistrictSearchQuery.KEYWORDS_PROVINCE, aMapLocation.getProvince()));
                aMapLocation.setCity(jSONObject.optString(DistrictSearchQuery.KEYWORDS_CITY, aMapLocation.getCity()));
                aMapLocation.setDistrict(jSONObject.optString(DistrictSearchQuery.KEYWORDS_DISTRICT, aMapLocation.getDistrict()));
                aMapLocation.setRoad(jSONObject.optString("road", aMapLocation.getRoad()));
                aMapLocation.setStreet(jSONObject.optString("street", aMapLocation.getStreet()));
                aMapLocation.setNumber(jSONObject.optString("number", aMapLocation.getStreetNum()));
                aMapLocation.setPoiName(jSONObject.optString("poiname", aMapLocation.getPoiName()));
                aMapLocation.setAoiName(jSONObject.optString("aoiname", aMapLocation.getAoiName()));
                aMapLocation.setErrorCode(jSONObject.optInt(MyLocationStyle.ERROR_CODE, aMapLocation.getErrorCode()));
                aMapLocation.setErrorInfo(jSONObject.optString(MyLocationStyle.ERROR_INFO, aMapLocation.getErrorInfo()));
                aMapLocation.setLocationType(jSONObject.optInt(MyLocationStyle.LOCATION_TYPE, aMapLocation.getLocationType()));
                aMapLocation.setLocationDetail(jSONObject.optString("locationDetail", aMapLocation.getLocationDetail()));
                aMapLocation.setTime(jSONObject.optLong("time", aMapLocation.getTime()));
                boolean optBoolean = jSONObject.optBoolean("isOffset", aMapLocation.isOffset());
                aMapLocation.setOffset(optBoolean);
                aMapLocation.setBuildingId(jSONObject.optString("poiid", aMapLocation.getBuildingId()));
                aMapLocation.setFloor(jSONObject.optString("floor", aMapLocation.getFloor()));
                aMapLocation.setDescription(jSONObject.optString("description", aMapLocation.getDescription()));
                if (jSONObject.has("coordType")) {
                    aMapLocation.setCoordType(jSONObject.optString("coordType", AMapLocation.COORD_TYPE_GCJ02));
                } else if (!a(optDouble, optDouble2) || !optBoolean) {
                    aMapLocation.setCoordType(AMapLocation.COORD_TYPE_WGS84);
                } else {
                    aMapLocation.setCoordType(AMapLocation.COORD_TYPE_GCJ02);
                }
                Bundle bundle = new Bundle();
                bundle.putString("citycode", aMapLocation.getCityCode());
                bundle.putString("desc", optString4.toString());
                bundle.putString("adcode", aMapLocation.getAdCode());
                aMapLocation.setExtras(bundle);
            } catch (Throwable th4) {
                a(th4, "CoreUtil", "transformLocation");
            }
        }
    }

    public static void a(Context context) {
        try {
            if (rk.b(context)) {
                a = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            try {
                if (j == null) {
                    j = new HashMap<>(16);
                }
                j.clear();
                j.put("a9a9d23668a1a7ea93de9b21d67e436a", "F13160D440C7D0229DA95450F66AF92154AC84DF088F8CA3100B2E8131D57F3DC67124D4C466056E7A3DFBE035E1B9A4B9DA4DB68AE65A43EDFD92F5C60EF0C9");
                j.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
                j.put("b2e8bd171989cb2c3c13bd89b4c1067a", "239CE372F804D4BE4EAFFD183668379BDF274440E6F246AB16BBE6F5D1D30DEACFBBF0C942485727FF12288228760A9E");
                j.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
                j.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
                j.put("256b0f26bb2a9506be6cfdb84028ae08", "AF2228680EDC323FBA035362EB7E1E38A0C33E1CF6F6FB805EE553A230CBA754CD9552EB9B546542CBE619E8293151BE");
            } catch (Throwable th) {
                a(th, "CoreUtil", "initUrlHash");
            }
            String a2 = vj.a(qy.f(context));
            i = a2;
            if (a2 != null) {
                try {
                    if (a2.length() != 0) {
                        if (j != null && j.containsKey(a2)) {
                            String str = j.get(a2);
                            String str2 = null;
                            if (str != null && str.length() > 0) {
                                str2 = new String(vj.d(a(str), a2), "utf-8");
                            }
                            if (str2 != null && str2.length() > 0 && str2.contains("http:")) {
                                b = str2;
                                a = str2;
                            }
                        }
                    }
                } catch (Throwable th2) {
                    a(th2, "CoreUtil", "checkUrl");
                }
            }
        } catch (Throwable th3) {
            a(th3, "CoreUtil", "checkUrl");
        }
    }

    private static byte[] a(String str) {
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String lowerCase = str.toLowerCase(Locale.US);
        int length = lowerCase.length() / 2;
        byte[] bArr = new byte[length];
        for (int i2 = 0; i2 < length; i2++) {
            int i3 = i2 * 2;
            bArr[i2] = (byte) (wc.i(lowerCase.substring(i3, i3 + 2)) & 255);
        }
        return bArr;
    }

    public static rj b() {
        try {
            if (n == null) {
                n = new rj.a("loc", "4.5.0", "AMAP_Location_SDK_Android 4.5.0").a(e()).a("4.5.0").a();
            }
        } catch (Throwable th) {
            a(th, "CoreUtil", "getSDKInfo");
        }
        return n;
    }

    public static rj a(String str, String str2) {
        try {
            return new rj.a(str, str2, "AMAP_Location_SDK_Android 4.5.0").a(e()).a();
        } catch (Throwable th) {
            a(th, "CoreUtil", "getSDKInfo");
            return null;
        }
    }

    public static void a(Throwable th, String str, String str2) {
        if (!"reportError".equals(str2)) {
            try {
                if (!(th instanceof qx)) {
                    rx.c(th, str, str2);
                }
            } catch (Throwable th2) {
            }
        }
    }

    public static String c() {
        return c;
    }

    public static boolean d() {
        if (!k) {
            k = true;
            l = false;
        }
        return l;
    }

    public static Bundle a(AMapLocationClientOption aMapLocationClientOption) {
        Bundle bundle = new Bundle();
        if (aMapLocationClientOption == null) {
            aMapLocationClientOption = new AMapLocationClientOption();
        }
        try {
            bundle.putParcelable("opt", aMapLocationClientOption);
        } catch (Throwable th) {
            a(th, "CoreUtil", "getOptionBundle");
        }
        return bundle;
    }

    public static AMapLocationClientOption a(Bundle bundle) {
        AMapLocationClientOption aMapLocationClientOption = new AMapLocationClientOption();
        if (bundle == null) {
            return aMapLocationClientOption;
        }
        try {
            bundle.setClassLoader(AMapLocationClientOption.class.getClassLoader());
            return (AMapLocationClientOption) bundle.getParcelable("opt");
        } catch (Throwable th) {
            a(th, "CoreUtil", "getOptionFromBundle");
            return aMapLocationClientOption;
        }
    }

    public static String b(Context context) {
        return rg.b(qy.e(context));
    }

    public static void c(Context context) {
        try {
            if (rk.b(context)) {
                a = "http://abroad.apilocate.amap.com/mobile/binary";
            } else if (TextUtils.isEmpty(b)) {
                a = "http://apilocate.amap.com/mobile/binary";
            } else {
                a = b;
            }
        } catch (Throwable th) {
            a(th, "CoreUtil", "changeUrl");
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:34:0x00fe  */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x0103 A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static boolean a(com.amap.api.location.DPoint r33, java.util.List<com.amap.api.location.DPoint> r34) {
        /*
        // Method dump skipped, instructions count: 275
        */
        throw new UnsupportedOperationException("Method not decompiled: com.amap.api.col.stln3.vu.a(com.amap.api.location.DPoint, java.util.List):boolean");
    }

    private static boolean a(double d2, double d3, double d4, double d5, double d6, double d7) {
        if (Math.abs(((d4 - d2) * (d7 - d3)) - ((d6 - d2) * (d5 - d3))) >= 1.0E-9d || (d2 - d4) * (d2 - d6) > 0.0d || (d3 - d5) * (d3 - d7) > 0.0d) {
            return false;
        }
        return true;
    }
}
